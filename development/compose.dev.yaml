x-common-config: &common-config
  restart: unless-stopped
  networks:
    - blokmap-dev-network
  env_file:
    - .env

services:
  blokmap-dev-frontend:
    <<: *common-config
    container_name: blokmap-dev-frontend
    build:
      context: ${FRONTEND_DIR}
      dockerfile: Dockerfile.dev
    environment:
      - VITE_MAPBOX_API_KEY=${MAPBOX_API_KEY}
    volumes:
      - ${FRONTEND_DIR}:/blokmap-frontend
      - /blokmap-frontend/node_modules
    ports:
      - "3000:3000"

  blokmap-dev-backend:
    <<: *common-config
    container_name: blokmap-dev-backend
    build:
      context: ${BACKEND_DIR}
      dockerfile: Dockerfile.dev
    environment:
        - DATABASE_URL=postgresql://${BACKEND_DATABASE_USER}:${BACKEND_DATABASE_PASSWORD}@blokmap-dev-backend-database:5432/${BACKEND_DATABASE_NAME}
    volumes:
      - ${BACKEND_DIR}:/blokmap-backend
      - ${FILES_DIR}:/mnt/files
    ports:
      - "8000:80"
    secrets:
      - cookie-jar-key
      - claims-cookie-key
      - google-oidc-credentials
    depends_on:
      - blokmap-dev-backend-database
      - blokmap-dev-redis

  blokmap-dev-authentication:
    <<: *common-config
    container_name: blokmap-dev-authentication
    build:
      context: ${AUTHENTICATION_DIR}
      dockerfile: Dockerfile.dev
    environment:
      - DATABASE_URL=postgresql://${AUTHENTICATION_DATABASE_USER}:${AUTHENTICATION_DATABASE_PASSWORD}@blokmap-dev-authentication-database:5432/${AUTHENTICATION_DATABASE_NAME}
    volumes:
      - ${AUTHENTICATION_DIR}:/auth-server
      - /auth-server/node_modules
    ports:
      - "4000:80"
    secrets:
      - cookie-jar-key
      - claims-cookie-key
      - google-oidc-credentials
    depends_on:
      - blokmap-dev-authentication-database

  blokmap-dev-backend-database:
    <<: *common-config
    image: postgres:17.0-alpine
    container_name: blokmap-dev-backend-database
    environment:
      - PGUSER=${BACKEND_DATABASE_USER}
      - POSTGRES_DB=${BACKEND_DATABASE_NAME}
      - POSTGRES_USER=${BACKEND_DATABASE_USER}
      - POSTGRES_PASSWORD=${BACKEND_DATABASE_PASSWORD}
    ports:
      - "6543:5432"

  blokmap-dev-authentication-database:
    <<: *common-config
    image: postgres:17.0-alpine
    container_name: blokmap-dev-authentication-database
    environment:
      - PGUSER=${AUTHENTICATION_DATABASE_USER}
      - POSTGRES_DB=${AUTHENTICATION_DATABASE_NAME}
      - POSTGRES_USER=${AUTHENTICATION_DATABASE_USER}
      - POSTGRES_PASSWORD=${AUTHENTICATION_DATABASE_PASSWORD}
    ports:
      - "7654:5432"

  blokmap-dev-redis:
    <<: *common-config
    image: redis:7-alpine
    container_name: blokmap-dev-redis
    ports:
      - "6379:6379"

  blokmap-dev-nginx:
    image: nginx:alpine
    container_name: blokmap-dev-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
      - ${FILES_DIR}:/usr/share/nginx/html/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - blokmap-dev-frontend
      - blokmap-dev-backend
      - blokmap-dev-authentication
    networks:
      - blokmap-dev-network

secrets:
  cookie-jar-key:
    file: ./secrets/cookie-jar-key
  claims-cookie-key:
    file: ./secrets/claims-cookie-key
  google-oidc-credentials:
    file: ./secrets/google-oidc-credentials

networks:
  blokmap-dev-network:
    name: blokmap-dev-network
    driver: bridge
